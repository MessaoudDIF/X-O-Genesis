<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnChangePass.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxAAAAsQAa0jvXUAAARVSURBVGhD7VpbbAxRGC5BEAQR
        GppoRLq7rQeN2yOCBGmDpBL3B+L2Iho0gtRZLx4RDx5E4lEqItXQnYlYNCqhiAdE3K+ReOiDlETD+r52
        pjl7zOycmZ1dY9nky5yZOXPO953//8/558yWZTKZslJASYigIRyFlOXxmy6uVCREajfQERfGu4QwMkR/
        OdXBe6yTRxfOnJ3cKkgnNeJyebUwT4J0r00+xxF1zFN8JkhfjpzDEFKdNFeD2G0NAX3WGUDSvA/xG/yK
        KYiQGpFamtsKqc9wJ0ASkF3ujQmjwY+Y0IVUCSMOgl9UkoiH8xRYJdITbIIs8xrvOYj6EhPmbF0xoQqJ
        NbWOhlu0KqS6QHSbF6FqYWxOJI3O7GdTV2ccaJ3k9SzvhyoknjS3KyI+xJuNeh0irIO4WgSXe54dM0aj
        zvOhCgGByzIJWELokJDrQEiTMhg3dNoITchMkR4rBzjXiAUiPUSHhFyHz8DNnshidNaY0IRYM5U8lV70
        K8KuD6ucVqyyxqut0ITEm9uz4iOeNA57de52H0HfqMTJPq+2QhMCdxDKKK706txViEgtltti215thSaE
        FghLSFy0L1DaOvZfiGoqrxH5qy3SP+X2+fMh4IHiDjg308Hg1JZxCFN6Hft0GtRAMTJZtI3sf78wHvvO
        bt0Txews2L0eVn6zSRXkW0ilSA/vH2XXzFWXUJ71zLQsxrcQTIVH/7wIexDN47ab+RKSaG5fBWvkeo/I
        c5R9W7kHGcU639kvLHE2OtYYsMqFIEKeRU+I0e1LiPXm9z2CQjJ8k9SOkRphzoyiCHJiSqMtxCH/KXZg
        u/b3bwopGdcqGSElEyN/0CJ885wEDAOGWFievVsT/Vnrm0W8DcenwEvgFcCl4JwtJqqz1kcQ5Igfs4iP
        wFHdgm3AtT0Ad/lPQMisqK0jP0BsEMBNOr63jwN2WYTldaQF18YDg4H5QIW2kCLFyBKQWiv5/wc5FpQy
        87671rUWbSFFmLWug9Q0YOCLVg4R6ir/E3WX/LbP4KSuCBahJXa4kKdlOHtx467LpU6nlpAiWKQHBIcC
        +4CvEtm3lqUYCysA7BcYtxQx76NkEbrLJ4ABfk0iehBleeeRVuOsZbsXXy3masdIEVyLxI4AnLXuSUQ5
        zdZL580o10nnXGsqtYVga38MHnjj4p9hpPTtaDsGXFL6eITziQDXlo2WUPWr2B1cr9WKEb5OFngbaCHI
        cLSdBuUFrnNt2QpcdanzUFsIdvr2F9AiD9F2OfA6YB9btIX0/QEg+Zvpw3Aru41lELHJEtKNI93KrX05
        bbmJeoO1hdC9rKDX+SdDEIEkxyx3PTDVKqvfFNnuGYCLJzMBblHN0w52eeOYm8kFtAzF7AS4VtjuxhxM
        HpjaeDI1R+YUSAgbsD5a7kUHSLFz/oshiGXsZ7jQcbbkdMwyV3jmWFPUHfnAQtSGGD9Y/SsLgFGY+gd5
        fZ/RFuJUMerXfgHxMYjEhRhVGwAAAABJRU5ErkJggg==
</value>
  </data>
</root>