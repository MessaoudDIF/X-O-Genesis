<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MkPFgPkHjtoOKcSS/dgAAAAASUVORK5CYII=
</value>
  </data>
</root>