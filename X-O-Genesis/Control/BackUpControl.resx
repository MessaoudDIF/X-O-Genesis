<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRestore.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f68bCAAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>