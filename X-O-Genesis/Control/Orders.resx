<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>