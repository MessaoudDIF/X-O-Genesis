<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="plusButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAFEZJREFUeF7t
        nctrHFf6hqVutaovqlbLfZFbHtQylsQwMpKxTQRayGCiQTTht7KNESGIEIYwq8GLWYQwEIasswj5A4Ix
        WWQxi5CVVyGE4EUYggkhZBWCV1mYYRZhMGF+3ysdM7FzLPWtuuvyvPDofNXdqq4653u/rr7UqSmUbF2/
        fr22tLR0sVar7Ydh+HqlUnm7VCq9HwTBvUKh8EmxWHyQz+e/tvZHax8Zj+2+J8Yvz/FE9+kx7rH6nwda
        h913T+vUuvUcei49p57bbQZCKCp1u91iu92+ZOY7KJfL75ohP5qdnf3KzPnY7v7vJNE2aFu0Tdo2baO2
        Vdts9yOE+tHu7m651Wrt2qvtHXsFvmfm+tZejX+xu7wGjCvaZm279kH7on3Svtl9CKGn2tjYaFWr1Rv2
        6vm+XklzudwTu9lrqqSjfdM+al+1z9p3ux2h7Gh7e7vcaDS69p76PTPDw+npaa9ZsoD2XX2gvlCfqG/s
        doTSpfX19SV7b/ymvU/+1A6Nf7abvIbIOuob9ZH6Sn1mtyGUTK2trS3Pzc3dsYT+0l7pEvceftKoz9R3
        VgzuqC/tNoTira2trTP23lav9J9n+dB+1Kgv1afqW/Wx3YZQPHR4eJhrNpv7xWLx41wu9x+7yZvEMBrU
        x+pr9bn63m5DaPxaXV1tVSqVtwqFwg+26E1WiBb1vcZAY2HLCEWvdrt91V6B7vJqHx/cUcFdjY0tIzRa
        7ezs5BqNxiv2PvQzW/QmIcQDjZHGSmNmywgNrr29vZlarfbq7OzsN7boTTiIJxozjZ3G0JYR6l1Kmvn5
        +dfsPeb3tuhNMEgGGkONJYUAnaqDg4NcvV6/bUnznS16EwqSicZUY6sxtmWEnlWz2XzZ3j/+00JvAkE6
        0BhrrC1GaGqq0+lcLJfL9y30JgykE425xt5ilEVtbm6eCcPwA52hZoveJIF0o7FXDigXbBllQfv7+/pK
        742ZmZmfbNGbGJAtlAvKCeWGLaO0amVl5WKpVPrCQm8iQLZRbihHLEZpUrfbna3Vau/w6z04DeWIckU5
        Y8so6VpeXr4aBMFDC70DDuBDOaPcsRglUTdv3tSv+PSqz4d8MBDKHeWQcsmWUVJ0/vz51WKx+MBC78AC
        9INySTllMYq7Wq3WYT6f/7eF3sEEGATllHLLYhRHvfTSS3NhGN610DuAAKNAOcbkpTFTp9P5fRAEnLEH
        Y0G5ppyzGE1ai4uLNzjkh3GjnFPuWYwmoVu3buVqtdrfmXEXJoVyTzmoXLRlNC5dvnx5rlKp/MNC78AA
        jBPlonLSYhS1Lly48Dud0mmhdzAAJoFyUrlpMYpK586du1QoFB5Z6B0EgEmi3FSOWoxGrcXFxT/m8/l/
        WejtfIA4oBxVrlqMRqVGo3GbE3kgKShXlbMWo2G1sLDwZz7ph6ShnFXuWowGVb1e/6s13g4GSAIuh1G/
        qlarf7PG26kAScLlMupVYRi+Y423MwGSiMtpdJp45Ye0wpHAKeI9P6QdPhN4gdwnpt5OA0gTfDvwnPSd
        KV/1QVZQrvM7ASf9aoof+UDWUM5n/heD+t00P++FrKLcz+y5AzpzihN7IOvIA5k7i1DnTnNKL8Ax8kJm
        5hPQ7ClM5gHwLPJEJmYW0hRK1ng7ASDLOG+kV5pEka/7APzIG/KIxemTplHWTKoWenceAI5nG07dlOPb
        29v60I95+wF6QF5J1cVHuGIPQH84zyRf7npq3p0EgBeT+GsR6oqqvO8fLfV6/cMrV678IQnwtm845J3E
        XpVY11TnEt2jZ2Fh4T1rE6HZ2dmvrPHuB/SGPCQvWZws1Wo1ZvWJAApA9nBeSo6Wl5ev5nK5JxZ6dwgG
        hwKQPeQlecri+Kvb7c7ae7+HFnp3BoaDApBN5Cl5y+J4i0P/aKEAZJfYvxVYWVm5yOQe0UIByC7yljxm
        cfxkhye5Uqn0hYXejYfRQAHINvKYvGZxvNRoNN6wxrvRMDooAOC8Fh9tbm6emZmZ+clC7wbD6KAAgLwm
        z1kcD4Vh+IE13o2F0UIBAOE8N3l1Oh198Md3/mOCAgBCnpP3LJ6syuXyfWu8GwmjhwIAT3Hem5yazebL
        1ng3DqKBAgC/xnlw/Do4OMgFzOw7digA8GvkQXnR4vGqXq/r0kbejYLooADA8zgvjk97e3szhULhOwu9
        GwTRQQGA55EX5UmLx6P5+fnXrPFuDEQLBQB8OE9GL/fq/72F3g2BaKEAgA95cixHAbVa7VVrvBsB0UMB
        gBfhvBmddnZ2cjaozPM2QSgA8CLkTXnU4mjUaDRescb75DAeKABwEs6j0SgIgs+s8T4xjAcKAJyE8+jo
        1W63NSeZ90lhfFAA4DScV0erYrHI1X1iAAUATsN5dXRaXV1tMdVXPKAAwGnIq/KsxaNRpVJ5yxrvk8F4
        oQBALzjPDq/Dw8NcoVD4wULvE8F4oQBAL8iz8q7Fw6nZbO5b430SGD8UAOgV593hVCwWP7bG+wQwfigA
        0CvOu4Nra2vrDB/+xQsKAPSKvCsPWzyYqtXqm9Z4Vw6TgQIA/eA8PJiCIPjcGu+KYTJQAKAfnIf719ra
        2vL09LR3pTA5KADQD/KwvGxxf5qbm7tjjXelMDkoANAvYRjKy/3JDh2+tMa7QpgcFADoF+fl3rW+vr5k
        hw6/WOhdIUwOCgD0i7wsT1vcm+yQgU//YwoFAAbBebo32SHDp9Z4VwSThQIAg+A8fbq2t7fL+Xz+Zwu9
        K4LJQgGAQZCn5W2LT1aj0eha410JTB4KAAyK8/bJKpVKSjDvCmDyUABgUJy3T5YN2kNrvCuAyUMBgEFx
        3n6xNjY2Wvz6L95QAGBQ5G153GK/qtXqDWu8/wzxgAIAwxCGoTzuV7lcft8a7z9CPKAAwDA4j/vFgMUf
        CgAMgxuT32p3d7ecy+WeWOj9R4gHFAAYBnn82rVrv/09QKvV2rXG+08QHygAMCzO68+qUqlw+m8CoADA
        sDivP6tisXjPGu8/QHygAMCwOK8/Kxusb63x/gPEBwoADIvz+v/U7XaL+Xye8/8TAAUAhkVel+ctPla7
        3b5kjffBEC8oADAKnOePFYbhgTXeB0K8oADAKHCeP1a5XH7XGu8Dk0i9Xv9QRkkjnU7n/2wfE6FWq/UX
        3z6kgVKpdN920Zt/ScB5/lhBEHxkjfeBSeTKlSt/sBahyGRHN3+yxpt/ScB5/lhpO1SjAKColfQC4Dx/
        rEKh8Nga7wOTCAUARa2kFwDn+amp69ev157emBYoAChqJb0AiCPvLy0tXfTdmWQoAChqpaEAHHm/Vqvt
        ++5MMhQAFLXSUACOvB+G4eu+O5MMBQBFrTQUgCPvVyqVt313JhkKAIpaaSgA5v23NA146qYBowCgqJWG
        AnDk/SAIUncaMAUARa00FIAj7xcKhU98dyYZCgCKWmkoAEfeLxaLD3x3JhkKAIpaaSgAR97P5/Nf++5M
        MhQAFLXSUACOvG9V4EffnUmGAoCiVkqOAH7UEcAj351JhgKAolZKjgAeqQCk6kQgQQFAUSslBeCxvgZM
        3cVAKAAoaqWhABx53/6kbjJQCgCKWikpAL9QABAaQBSAGEMBQFGLAhBjKAAoaqWpAPAhIEJ9KjUfAvI1
        IEL9Kw0F4Mj7Rz8G8NyZZCgAKGqlpAA84qfACA2gNBSApz8F5mQghPpUSo4Ajk4G4nRghPpUSo4AHjAh
        CEIDKA0F4Mj7AVOCIdS30lAAjrzPpKAI9a80FIAj7zMtOEL9Kw0F4GhacC4MglD/SkMBOPI+lwZDqH+l
        oQAceZ+LgyLUv9JQAI68z+XBEepfaSgAzvtT+i1Aqk4IogCgqJX0AuA8fyzbma+s8T4wiVAAUNRKegFw
        nj9WEAQfWeN9YBKhAKColfQC4Dx/rHK5/K413gcmEQoAilpJLwDO88cKw/DAGu8DkwgFAEWtpBcA5/lj
        tdvtS9Z4H5hEKAAoaiW9ADjPH6vb7Rbz+XxqJgelAKColeQCIK/L8xb/T7ZD31rj/YekEQTBN7Y/X6WR
        Vqv1F9vHRKhSqdz17UMaMBP9YLvozb+4Y9svrz+rYrGYutOC08jCwsJ71iZCMoo13v2AyeG8/qysWt+x
        xvsPEB8oADAszuvPyg4td63x/gPEBwoADIvz+rPa3d0t53K51F0kJG1QAGAY5PFr166VLf6tGLD4QwGA
        YXBj4le5XE7d9GBpgwIAw+A87le1Wr1hjfcfIR5QAGAYwjCUx/3a2NhoTU9Pe/8R4gEFAAZF3pbHLX6x
        bNAeWuNdAUweCgAMivP2ySqVSkow7wpg8lAAYFCct09Wo9HoWuNdAUweCgAMivP2ydre3i7n8/mfLfSu
        BCYLBQAGQZ6Wty0+XUEQfGqNd0UwWSgAMAjO070pDMM3rfGuCCYLBQAGwXm6N62vry9NT0+nZn6ANEEB
        gH6Rl+Vpi3uXHTJ8aY13hTA5KADQL87L/Wlubo7Tg2MIBQD6xQ7/f3v672laW1tb5leB8YMCAP0gD8vL
        FvcvO3T43BrvimEyUACgH5yHB1O1WuXbgJhBAYB+cB4eTFtbW2dyudx/LPSuHMYPBQB6Rd6Vhy0eXMVi
        8WNrvE8A44cCAL3ivDucms3mvjXeJ4DxQwGAXnHeHU6Hh4e5QqGQ2DnQ0wYFAHpBnpV3LR5elUrlLWu8
        TwTjhQIAveA8Oxqtrq62+DAwHlAA4DTkVXnW4tGpWCzetcb7hDA+KABwGs6ro1W73b5qjfcJYXxQAOA0
        zp49e9na0SsIgs+s8T4pjAcKAJyE82g0ajQar1jjfWIYDxQAOAnn0Wi0s7OTs0H9xkLvk0P0UADgRcib
        8qjF0alWq71qjXcDIHooAPAinDej1d7e3kyhUPjeQu9GQLRQAMCHPClvWhy95ufnX7PGuyEQLRQA8OE8
        OR65o4DvLPRuDEQHBQCeR14c26v/U9Xr9dvWeDcIooMCAM/jvDheHRwc5IIg+KeF3o2CaKAAwK+RB+VF
        i8evZrP5sjXeDYNooADAr3EenJzK5fJ9a7wbB6OHAgBPcd6brDqdzsVcLvfEQu9GwmihAICQ5+Q9iyev
        MAw/sMa7oTBaKAAgnOfioc3NzTMzMzM/WejdWBgdFACQ1+Q5i+OjRqPxhjXeDYbRQQEA57V4qdvt5kql
        0hcWejcaRgMFINvIY/KaxfHTysqKPhBk6rAIoQBkF3lLHrM4vqrVau9Y490BGB4KQHZx3oq37PBkNgiC
        hxZ6dwKGgwKQTeQpecvi+Gt5efkqvw2IBgpA9pCX5CmLkyPeCkQDBSB7JOLQ/3ndvHlzplgsPrDQu1Mw
        GBSAbCEPyUsWJ0/nz59fzefz/7bQu3PQPxSA7CDvyEMWJ1etVuvQGu8OQv9QALKD807yFYbhh9Z4dxL6
        gwKQDZxn0qHt7e1yEARMJz4CKADpR16RZyxOjzqdzu/5PGB4SqXSfTPWn5KAjTeXle8TeUResTh9Wlxc
        vDE9Pf2Lhd6dB8gy8oY8YnF6VavV/m6NtwMAsozzRrp169atXKVS+YeF3k4AyCLyhLxhcfp1+fLlOc1m
        aqG3MwCyhLwgT1icHV24cOF3hULhkYXeTgHIAvKAvGBx9nTu3LlL+Xz+XxZ6OwcgzSj35QGLs6vFxcU/
        MokIZA3lvHLfYtRoNG7z9SBkBeW6ct5i9FQLCwt/tsbbYQBpwuU6el71ev2v1ng7DSANuBxHL1K1Wv2b
        Nd7OA0gyLrfRaQrDkNmEIFW4nEa9iiMBSAu88g8oPhOApMN7/iGlT0z5ihCShnKWT/tHJH1nyo+FICko
        V/mef8TSr6b42TDEHeUov/CLSPrdNCcQQVxRbmb+t/1RS2dOcSoxxA3lZGbP6hu3dO40k4pAXFAuZu58
        /klLs6doCiW+IYBJodxTDmZmJp84SpMoaiZVC72DBBAFyjnlnsVo0tI0yppL3ULvYAGMEuVaaqfuTqp0
        IYUwDO9a6B00gFGgK/ak7qIdaZKup8ZbAhg1yqnUXKsv7dIVVbk0OYwK5VLir9KbNema6rVa7Z1cLvfE
        Fr0DC3ASyh3lUGKvz4+mppaXl68GQfDQQu8gA/hQzih3LEZJV7fbnXVHA5xQBCeiHFGuKGdsGaVJKysr
        F0ul0hcWegcfso1yQzliMUqr9vf3c41G442ZmZmfbNGbCJAtlAvKCeWGLaMsaHNz80wYhh/wIWF20dgr
        B5QLtoyyqE6nc7FcLt+30JskkE405hp7ixGammo2my/rlE4LvQkD6UBjrLG2GKFndXBwkKvX67cLhcJ3
        tuhNIEgmGlONrcbYlhF6sfb29mbm5+dfs6T53ha9CQXJQGOosdSY2jJCvUtJU6vVXp2dneVMw4ShMdPY
        YXw0tHZ2dvTV4Sv2/vEzW/QmHMQDjZHGSmNmywiNVu12+2qxWLzLrwrjg8ZCY3L27NnLtoxQ9FpdXW1V
        KpW37D3mD7boTUyIFvW9xkBjYcsIjV+Hh4e5ZrO5b69AH3NUED3u1f5j9bn63m5DKB7a2to6U61W37T3
        oZ9PT097Exj6R32pPlXfqo/tNoTirbW1teUwDO9Y4n7JzMX9oz5T36kP1Zd2G0LJ1Pr6+pIlso4MPs3n
        8z/bTd6kzzrqG/WR+kp9ZrchlC5pQslGo9EtlUrvzc7OPszyWwXtu/pAfaE+YbJNlDltbGy07L3tjXK5
        /L6Z4SudoWY3ew2TdLRv2kftq73K39C+2+0Ioae6du1audVq7VYqlTvFYvGeGeZbOzRO3GcI2mZtu/ZB
        +6J90r7ZfQihftTtdovtdvuSvWoe2Kvnu/Y++SO9khYKhcd2t9eA40LboG3RNmnbtI3aVm2z3Y8QilLX
        r1+vLS0tXazVavtmvtft1fZte0/9vhnynpnzE3sFfmCvxl9b+6O1j4zHdt8TQ5+y/5onuk+PcY/V/zzQ
        Ouy+e1qn1q3n0HPpOfXcbjNQIjU19f/sDNuy92xwLgAAAABJRU5ErkJggg==
</value>
  </data>
</root>