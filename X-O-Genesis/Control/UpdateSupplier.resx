<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>